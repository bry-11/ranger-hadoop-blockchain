# Nunca especificar un solo Orderer en producción, es un punto de fallo pues si cae
# el servicio Orderer y no hay envíos a la Blockchain, el sistema cae y la Blockchain:
# es inaccesible

OrdererOrgs:
  # -------------------------------------------------------
  # Orderer
  # -------------------------------------------------------
  - Name: Orderer # Nombre de la organización, Los Orderer pueden pertenecer a varias organizaciones
    Domain: example.com # Dominio que los participantes van a traducir
    # Los certificados van asociados a un dominio especifico, para realizar las
    # firmas y las comprobaciones se utiliza el dominio

    # El dominio sirve para agrupar nodos por red, externa o interna (dns interno), si un nodo accede robando un
    # certificado desde una red que no es la tuya, no pertenecerá al dominio luego
    # la conexion será rechazada

    EnableNodeOUs: true # (Organization Unit) Permite la clasificación entre:
    # Clientes: Envian transacciones, consultan a los Peers
    # Peers: Validan o envian transacciones

    # ----------------------------------------------------
    # "Specs" - See PeerOrgs below for complete description
    # ----------------------------------------------------
    Spacs: # (Subdominio) Cada nodo Orderer se creará perteneciendo a la organización Orderer,
      # al dominio especificado y con el hostname de la lista en función de cuando se ha creado
      - Hostname: orderer # El primer Orderer será orderer.example.com

      # Si hay 5 Hostname especificados, creará 5 certificados uno para cada Orderer
      # Para crear más Orderer, copiar esta configuracion dando al segundo Orderer
      # un nembre de organización distinta

# ------------------------------------------------------------
# "PeerOrgs" - Definition of organirstions managigg acer nodes
# ------------------------------------------------------------

# No utilizar un unico Peer, es un panto de falla y si cae la red es inacresible
PeerOrgs:
  # ------------------------------------------------
  # Org1
  # ------------------------------------------------
  - Name: Org1 # Nombre de la organización, solo pueden hablar entre Peers de la misma organización
    Domain: org1.example.com # Nombre del dominio, misma idea que el Orderer

    # Con CommonName: reescribes el dominio completo para que tenga otro nombre,
    # por ejemplo sería midominio.com

    EnableNodeOUs: true # (Organizational Unit) Permite la clasificación entre:
    # Clieotes: Eovian tronsacciones, consultan a los Peers
    # Peers: Validan o envian teansacciones

    # ----------------------------------------------------------
    # "Specs"
    # ----------------------------------------------------------
    # Uncomment this section to enable the explicit definition of hosts in your
    # configuration. Most users will want to use Template, below
    #
    # Specs is an array of Spec entries. Each Spec entry consists of two fields:
    #   - Hostname: (Required) The desired hostname, sans the domain.
    #   - CommonName: (Optional) Specifies the template or explicit override for
    #                 the CN. By default, this is the template:
    #
    #                             "({. Hostname)}.{(Domain}]"
    #
    #                 which obtains its values from the Spec.Hostname and
    #                 Org. Domain, respectively.
    # ----------------------------------------------------------
    # Specs:
    #   - Hostname: foo # implicitly "foo.orgl.example.com"
    #   CommonName: foo27.org5.example.com # overrides Hostname-based FQDN set above
    #   - Hostname: bar
    #   - Hostname: baz
    # ----------------------------------------------------------
    # "Template"
    # ----------------------------------------------------------
    # Allows for the definition of 1 or more hosts that are created sequentially
    # from a template. By default, this looks like "peer©d" fram 0 to Count-1.
    # You may override the number of nodes (Count), the starting index (Start)
    # or the template used to construct the name (Hostname) •
    #
    # Note: Template and Specs are not mutually exclusive. You may define both
    # sections and the aggregate nodes will be created for you. Take care with
    # name collisions
    # ----------------------------------------------------------
    Template:
      Count: 2 # Numero de Peers, cada Peer tendrá su propio certificado
      # Start: 5
      # Hostname: {{.Prefix)}{{.Index}) # default

      # Igual que el Orderer, en funcióo de lo especificado será:
      # Peer0.org1.example.com
      # Peer1.org1.example.com

    # ----------------------------------------------------
    # "Users"
    # ----------------------------------------------------
    # CoGet: The numbar of asar acacuats in additeon to Admin
    # ----------------------------------------------------
    Users:
      Count: 1 # Número de usuarios de la red, según el número de certificados se generan esos nuevo
    # certificados destinados a usuarios de la red

    # Si los usuarios obtienen los certificados de una forma externa a Hyperledger, se
    # puede establecer a 0
  - Name: Org2
    Domain: org2.example.com
    Template:
      Count: 2
    Users:
      Count: 1
